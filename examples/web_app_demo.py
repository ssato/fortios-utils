#
# Copyright (C) 2020 Satoru SATOH <satoru.satoh@gmail.com>.
# SPDX-License-Identifier: MIT
#
r"""
An example web application to:

- parse and save fortigate's "show configuration" outputs
- search firewall policy from the table

It requires streamlit to run:

- streamlit: https://docs.streamlit.io
"""
import os.path
import os
import tempfile
import uuid

import click
import fortios_xutils
import streamlit


def process_config(outdir=None):
    """
    process fortigate's "show configuration" output and save results.
    """
    streamlit.header("Fortigate Configuration")

    content = streamlit.file_uploader(
        "Choose a fortigate 'show configuration' output file"
    )
    if content is None:
        return

    if not outdir:
        outdir = tempfile.mkdtemp()

    filename = "forti_config_out_{}.dat".format(str(uuid.uuid4()))
    filepath = os.path.join(outdir, filename)
    open(filepath, 'w').write(content.read())

    frs = fortios_xutils.parse_and_save_show_configs([filepath], outdir)

    if frs and frs[0]:
        (filepath, alljsn) = frs[0]

        streamlit.json(alljsn)
        return filepath

    return None


def firewall_policy_search(filepath, outdir=None):
    """
    Search firewall policy table generated by 'firewall-policy-save' command,
    by ip address. FILEPATH is a file path to the pandas dataframe file
    generated by 'firewall-policy-save' command.

    :param filepath: fortios configuration in JSON format
    """
    streamlit.header("Firewall Policy Search")

    fdfs = fortios_xutils.make_and_save_firewall_policy_tables(
        [filepath], outdir=outdir
    )
    fdf = fdfs[0]

    streamlit.dataframe(fdf)

    ipa = streamlit.text_input("IP Address")
    if ipa:
        res = fortios_xutils.search_firewall_policy_table_by_addr(ipa, fdf)
        if res:
            streamlit.write("Searched result", res)


# .. todo::
@click.option("-O", "--outdir", type=click.Path(exists=False), default=None)
def main(filepath=None, outdir=None):
    streamlit.title("Fortigate Firewall Analysis")

    filepath = process_config(outdir=outdir)
    if filepath:
        firewall_policy_search(filepath, outdir=outdir)

if __name__ == '__main__':
    main()

# vim:sw=4:ts=4:et:
